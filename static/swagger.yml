openapi: 3.0.0
info:
  title: My Application API
  description: API for managing users, friends, and notes
  version: 1.0.0

tags:
  - name: Authentication
    description: Operations related to user authentication
  - name: Users
    description: Operations related to users
  - name: Friends
    description: Operations related to user friends
  - name: Notes
    description: Operations related to user notes

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        admin:
          type: boolean

    Note:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        content:
          type: string

    Friend:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        friend_id:
          type: integer
          format: int64

paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      security:
        - BearerAuth: []
      responses:
        "200":
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"

  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get user details by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

    put:
      tags:
        - Users
      summary: Update user details by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: user
          required: true
          description: User object to update
          schema:
            $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Users
      summary: Delete user by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

  /users/{user_id}/notes:
    get:
      tags:
        - Notes
      summary: Get all notes of a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of notes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

    post:
      tags:
        - Notes
      summary: Create a new note for a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: note
          required: true
          description: Note object to create
          schema:
            $ref: "#/components/schemas/Note"
      responses:
        "201":
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

  /users/{user_id}/notes/{note_id}:
    get:
      tags:
        - Notes
      summary: Get a specific note of a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: note_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Note retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

    put:
      tags:
        - Notes
      summary: Update a specific note of a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: note_id
          required: true
          schema:
            type: integer
            format: int64
        - in: body
          name: note
          required: true
          description: Note object to update
          schema:
            $ref: "#/components/schemas/Note"
      responses:
        "200":
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
        "400":
          $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Notes
      summary: Delete a specific note of a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: note_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Note deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

  /users/{user_id}/friends:
    get:
      tags:
        - Friends
      summary: Get all friends of a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: List of friends retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

  /friends/{friend_id}:
    post:
      tags:
        - Friends
      summary: Add a friend for a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: friend_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "201":
          description: Friend added successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friend"
        "400":
          $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Friends
      summary: Remove a friend for a user
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            format: int64
        - in: path
          name: friend_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Friend removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/schemas/Error"
        "403":
          $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/schemas/Error"
